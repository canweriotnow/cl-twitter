commands.lisp:    (let ((newargs (lisp->twitter-plist args)))
elements.lisp:  (let* ((lisprec (twitter->lisp-alist rec))
twitter-op.lisp:		      json:*lisp-identifier-name-to-json*))
utils.lisp:(defvar *lisp->twitter-symbols* (make-hash-table :test 'eq)
utils.lisp:(defvar *twitter->lisp-symbols* (make-hash-table :test 'eq)
utils.lisp:(defun lisp->twitter (sym)
utils.lisp:  (aif (gethash sym *lisp->twitter-symbols*) it
utils.lisp:(defun lisp->twitter-plist (plist)
utils.lisp:	   (lisp->twitter elt)
utils.lisp:  (aif (gethash sym *twitter->lisp-symbols*) it
utils.lisp:(defun twitter->lisp-alist (alist)
utils.lisp:(defun maybe-add-conversion (lisp-sym)
utils.lisp:  (let* ((lisp-key (as-keyword lisp-sym))
utils.lisp:	 (lisp-name (symbol-name lisp-key)))
utils.lisp:    (when (find #\- lisp-name)
utils.lisp:      (let ((twitter-sym (convert-to-twitter lisp-name)))
utils.lisp:	(setf (gethash lisp-key *lisp->twitter-symbols*) twitter-sym
utils.lisp:	      (gethash twitter-sym *twitter->lisp-symbols*) lisp-key)))))
